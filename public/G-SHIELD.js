/*

Software Name   : gCAPTCHA (game CAPTCHA)
Version         : 1.0
Author          : Darbaz Ali
Date            : july / 2018
Location        : Kurdistan / Iraq
Technology      : javascript, Web
Aim             : Internet Bot

Description:

gCAPTCHA is a brand new, GAME based
CAPTCHA system that focuses on human thinking
and memorizing.

*/


/*---------- general purpose functions ----------*/

//let println = console.log;

const gCLink = 'Home Page: <a href="https://darbaz.design/projects/g-shield.html" style="color: #F5A623">Learn More</a>';

// IIFE: deploying viewport meta tag to the page.
(function () {
  let viewPort = document.createElement('meta');
  viewPort.setAttribute("name", "viewport");
  viewPort.setAttribute("content", "width=device-width, initial-scale=1.0");

  document.getElementsByTagName('head')[0].appendChild(viewPort);
})();


// random integer between tow numbers, min & max
function randomInt(min, max) {
  return Math.floor(Math.random() * ((max + 1) - min) + min);
}

// creating element
function createDiv() {
  return document.createElement('div');
}


// styleing element
function styleElem(element, style) {
  element.setAttribute('style', style)
}


/* append element/elements to a node. */
function append(nodeName, element) {
  /* for appending an array of elements */
  if (element.length > 1) {
    element.forEach(function (item) {
      nodeName.appendChild(item.circle); // for circle objects
    });

    /* appending a singl element */
  } else {
    nodeName.appendChild(element)
  }

}


/* collision detection (rect - rect) true or false, algorithm */
function isColliding(element1, element2) {
  // size of the element
  const size = 60;

  const X1 = parseInt(element1.style.left);
  const X2 = parseInt(element2.style.left);

  const Y1 = parseInt(element1.style.top);
  const Y2 = parseInt(element2.style.top);


  if (X1 + size >= X2 &&
    X1 <= X2 + size &&
    Y1 + size >= Y2 &&
    Y1 <= Y2 + size) {
    return true;
  } else {
    return false;
  }
}


/* Randomize(shuffle) an array, algorithm */
function shuffle(srcArray, amount) {
  let rndArray = []; // random array

  while (rndArray.length < amount) {
    const random_index = Math.floor(Math.random() * srcArray.length);
    if (!rndArray.indexOf(random_index) >= 0 ||
      !rndArray.includes(random_index)) {

      rndArray.push(srcArray[random_index]);
      srcArray.splice(random_index, 1);
    }
  }
  return rndArray;
}


/* create circles from Circle object, algorithm */
function createCircles(object) {
  const circles = [];
  let value = 0;
  while (circles.length < 10) {
    // object
    let RandomX = randomInt(0, 260);
    let RandomY = randomInt(0, 260);
    let circle = new object(value, RandomX, RandomY);

    // looping throught all existing locations
    let overLapping = false;
    for (let j = 0; j < circles.length; j++) {
      let other = circles[j];
      let collision = isColliding(circle.circle, other.circle);

      if (collision) {
        overLapping = true;
        value--; // start again
        break; // break the loop
      }
    }

    if (!overLapping) {

      circles.push(circle);
    }

    value++;
  }
  return circles;
}


/* retruns an array of sorted values of a none sorted array */
function makeSortedModel(elements) {
  const sortedValues = [];

  elements.forEach(function (item) {
    sortedValues.push(parseInt(item.circle.getAttribute('value')));
  });

  return sortedValues.sort()
}

/*

  the above function is used to create a sorted sample array
  of the randomized circles.

*/


/*---------- COMPONENTS ----------*/

const colors = {
  white: '#FFF',
  transparent: 'rgba(255, 255, 255, 0)',
  darkGray: '#979797',
  lightGray: '#D8D8D8',
  mediumBlue: '#0000CD',
  forestGreen: '#228B22',
  royalBlue: '#4169E1',
  lightBlue: '#0563CF',
  deepBlue: '#053091',
  dimGray: '#696969',
  redOrange: "#E15821"
}

const SVG = {

  frameBack: '<svg width="320px" height="450px" viewBox="0 0 320 450" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><linearGradient x1="50%" y1="0%" x2="50%" y2="100%" id="linearGradient-1"><stop stop-color="#0F0C29" offset="0%"></stop><stop stop-color="#302B63" offset="51.8470014%"></stop><stop stop-color="#1B2445" offset="100%"></stop></linearGradient><linearGradient x1="50%" y1="0%" x2="50%" y2="100%" id="linearGradient-2"><stop stop-color="#FAD961" offset="0%"></stop><stop stop-color="#F76B1C" offset="100%"></stop></linearGradient></defs><g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="iPhone-SE-Copy-7" transform="translate(-33.000000, -109.000000)"><g id="Frame" transform="translate(33.000000, 109.000000)"><rect id="Frame-Copy-6" fill="url(#linearGradient-1)" x="1" y="0" width="319.003115" height="450" rx="30"></rect><g id="Group" transform="translate(0.000000, 70.000000)" fill="url(#linearGradient-2)" opacity="0.0865513393"><rect id="Rectangle-12-Copy-143" x="227.28972" y="252.631579" width="49.8442368" height="60.1503759" rx="3"></rect><rect id="Rectangle-12-Copy-144" x="216.323988" y="241.804511" width="49.8442368" height="60.1503759" rx="3"></rect><rect id="Rectangle-12-Copy-145" x="282.11838" y="187.669173" width="37.8816199" height="60.1503759" rx="3"></rect><rect id="Rectangle-12-Copy-146" x="71.7757009" y="214.135338" width="29.9065421" height="37.2932331" rx="3"></rect><rect id="Rectangle-12-Copy-147" x="166.479751" y="298.345865" width="16.9470405" height="21.6541353" rx="3"></rect><rect id="Rectangle-12-Copy-148" x="219.314642" y="185.263158" width="16.9470405" height="21.6541353" rx="3"></rect><rect id="Rectangle-12-Copy-149" x="25.9190031" y="298.345865" width="16.9470405" height="21.6541353" rx="3"></rect><rect id="Rectangle-12-Copy-150" x="125.607477" y="42.1052632" width="49.8442368" height="60.1503759" rx="3"></rect><rect id="Rectangle-12-Copy-151" x="64.7975078" y="206.917293" width="29.9065421" height="37.2932331" rx="3"></rect><rect id="Rectangle-12-Copy-152" x="0" y="147.969925" width="20.9345794" height="37.2932331" rx="3"></rect><rect id="Rectangle-12-Copy-153" x="263.17757" y="138.345865" width="29.9065421" height="37.2932331" rx="3"></rect><rect id="Rectangle-12-Copy-154" x="241.246106" y="0" width="29.9065421" height="37.2932331" rx="3"></rect><rect id="Rectangle-12-Copy-155" x="111.65109" y="261.052632" width="16.9470405" height="21.6541353" rx="2"></rect><rect id="Rectangle-12-Copy-156" x="37.8816199" y="56.5413534" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-157" x="94.7040498" y="24.0601504" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-158" x="131.588785" y="84.2105263" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-159" x="201.370717" y="12.0300752" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-160" x="241.246106" y="96.2406015" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-161" x="152.523364" y="211.729323" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-162" x="183.426791" y="50.5263158" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-163" x="183.426791" y="128.721805" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-164" x="140.560748" y="144.360902" width="9.96884735" height="12.0300752" rx="2"></rect><rect id="Rectangle-12-Copy-165" x="34.8909657" y="80.6015038" width="9.96884735" height="12.0300752" rx="1"></rect><rect id="Rectangle-12-Copy-166" x="99.6884735" y="18.0451128" width="9.96884735" height="12.0300752" rx="1"></rect><rect id="Rectangle-12-Copy-167" x="136.573209" y="108.270677" width="4.98442368" height="6.01503759" rx="0.5"></rect><rect id="Rectangle-12-Copy-168" x="136.573209" y="3.60902256" width="4.98442368" height="6.01503759" rx="0.5"></rect><rect id="Rectangle-12-Copy-169" x="47.8504673" y="9.62406015" width="4.98442368" height="6.01503759" rx="0.5"></rect><rect id="Rectangle-12-Copy-170" x="50.8411215" y="3.60902256" width="4.98442368" height="6.01503759" rx="0.5"></rect><rect id="Rectangle-12-Copy-171" x="206.35514" y="6.01503759" width="9.96884735" height="12.0300752" rx="1.5"></rect><rect id="Rectangle-12-Copy-172" x="246.23053" y="90.2255639" width="9.96884735" height="12.0300752" rx="2.5"></rect><rect id="Rectangle-12-Copy-173" x="157.507788" y="205.714286" width="9.96884735" height="12.0300752" rx="2.5"></rect><rect id="Rectangle-12-Copy-174" x="188.411215" y="44.5112782" width="9.96884735" height="12.0300752" rx="2.5"></rect><rect id="Rectangle-12-Copy-175" x="188.411215" y="122.706767" width="9.96884735" height="12.0300752" rx="2.5"></rect><rect id="Rectangle-12-Copy-176" x="52.834891" y="122.706767" width="9.96884735" height="12.0300752" rx="2.5"></rect></g><g id="Group-Copy-16" opacity="0.0439395357" transform="translate(132.588785, 81.000000)"><ellipse id="Oval-12-Copy-6" stroke="#FFB63E" stroke-width="4" cx="29.9065421" cy="30" rx="29.9065421" ry="30"></ellipse><text id="1" font-family="ArialMT, Arial" font-size="58" font-weight="normal" fill="#FFB63E"><tspan x="12.9595016" y="55">1</tspan></text></g><g id="Group-Copy-20" opacity="0.055826" transform="translate(161.498442, 204.000000)"><ellipse id="Oval-12-Copy-6" stroke="#FFB63E" stroke-width="4" cx="29.9065421" cy="30" rx="29.9065421" ry="30"></ellipse><text id="5" font-family="ArialMT, Arial" font-size="58" font-weight="normal" fill="#FFB63E"><tspan x="12.9595016" y="55">5</tspan></text></g><g id="Group-5-Copy-5" opacity="0.0646986429" transform="translate(21.934579, 247.000000)"><ellipse id="Oval-12-Copy-10" stroke="#FFB63E" stroke-width="4" cx="29.9065421" cy="30" rx="29.9065421" ry="30"></ellipse><rect id="Rectangle-12" fill="#FFB63E" transform="translate(29.906542, 30.500000) rotate(45.000000) translate(-29.906542, -30.500000) " x="27.9127726" y="9" width="3.98753894" height="43" rx="1.99376947"></rect><rect id="Rectangle-12-Copy-35" fill="#FFB63E" transform="translate(29.906542, 30.500000) scale(1, -1) rotate(45.000000) translate(-29.906542, -30.500000) " x="27.9127726" y="9" width="3.98753894" height="43" rx="1.99376947"></rect></g></g></g></g></svg>',


  closeIcon: '<svg width="45px" height="45px" viewBox="0 0 45 45" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="iPhone-SE-Copy-7" transform="translate(-285.000000, -508.000000)"><g id="Group-4" transform="translate(285.000000, 508.000000)"><rect id="Rectangle-13-Copy-2" stroke="#F5A623" x="0.5" y="0.5" width="44" height="44" rx="10"></rect><path d="M24.7561385,23 L34.5327384,32.385536 C35.1557539,32.9836308 35.1557539,33.9533341 34.5327384,34.5514289 C33.909723,35.1495237 32.8996154,35.1495237 32.2766,34.5514289 L22.5,25.1658929 L12.7234,34.5514289 C12.1003846,35.1495237 11.090277,35.1495237 10.4672616,34.5514289 C9.84424614,33.9533341 9.84424614,32.9836308 10.4672616,32.385536 L20.2438615,23 L10.4672616,13.614464 C9.84424614,13.0163692 9.84424614,12.0466659 10.4672616,11.4485711 C11.090277,10.8504763 12.1003846,10.8504763 12.7234,11.4485711 L22.5,20.8341071 L32.2766,11.4485711 C32.8996154,10.8504763 33.909723,10.8504763 34.5327384,11.4485711 C35.1557539,12.0466659 35.1557539,13.0163692 34.5327384,13.614464 L24.7561385,23 Z" id="Combined-Shape" fill="#FFB63E"></path></g></g></g></svg>',


  infoIcon: '<svg width="45px" height="45px" viewBox="0 0 45 45" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="iPhone-SE-Copy-7" transform="translate(-57.000000, -508.000000)"><g id="Group-2" transform="translate(57.000000, 508.000000)"><rect id="Rectangle-13-Copy-4" stroke="#F5A623" x="0.5" y="0.5" width="44" height="44" rx="10"></rect><path d="M28.352,30.5829095 C28.7840022,30.8324868 29,31.0742613 29,31.3082401 C29,31.8697892 28.304007,32.9772722 26.912,34.6307223 C25.0399906,36.8769187 23.304008,38 21.704,38 C20.5359942,38 19.952,37.2434799 19.952,35.7304171 C19.952,35.0908751 20.1919976,33.1254827 20.672,29.8341811 L21.608,23.4699898 L21.848,21.8555443 L22.04,20.5686673 C22.1200004,20.0227168 22.16,19.5625655 22.16,19.1881994 C22.16,18.4082701 21.9360022,18.0183113 21.488,18.0183113 C20.2399938,18.0183113 18.8960072,19.3597696 17.456,22.0427263 C17.1519985,21.7775504 17,21.5123784 17,21.2472024 C17,20.2956887 17.899991,19.0166238 19.7,17.4099695 C21.500009,15.8033151 22.9359946,15 24.008,15 C25.208006,15 25.808,15.8111143 25.808,17.4333672 C25.808,17.745339 25.7440006,18.3848714 25.616,19.3519837 L25.4,20.9196338 C25.3839999,21.0444225 25.2960008,21.6761557 25.136,22.8148525 L24.152,29.5066124 L23.912,31.0040692 C23.703999,32.4859348 23.6,33.4764302 23.6,33.9755849 C23.6,34.6463241 23.799998,34.9816887 24.2,34.9816887 C25.5440067,34.9816887 26.9279929,33.5154436 28.352,30.5829095 Z M23.5,13 C22.1192881,13 21,11.8807119 21,10.5 C21,9.11928813 22.1192881,8 23.5,8 C24.8807119,8 26,9.11928813 26,10.5 C26,11.8807119 24.8807119,13 23.5,13 Z" id="Combined-Shape" fill="#F5A623"></path></g></g></g></svg>',


  restartIcon: '<svg width="45px" height="45px" viewBox="0 0 45 45" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="iPhone-SE-Copy-7" transform="translate(-175.000000, -508.000000)"><g id="Group-3" transform="translate(175.000000, 508.000000)"><rect id="Rectangle-13-Copy-3" stroke="#F5A623" x="0.5" y="0.5" width="44" height="44" rx="10"></rect><path d="M33,13.5687832 L33,12 C33,11.4477153 33.4477153,11 34,11 C34.5522847,11 35,11.4477153 35,12 L35,19 L28,19 C27.4477153,19 27,18.5522847 27,18 C27,17.4477153 27.4477153,17 28,17 L31.9980668,17 C29.9570923,14.0645375 26.4283798,12 22.8342321,12 C16.8310328,12 11.9644783,16.9248678 11.9644783,23 C11.9644783,29.0751322 16.8310328,34 22.8342321,34 C27.3825296,34 31.5100374,30.8345571 32.9949536,26.9172785 C34.4798698,23 36.7357623,25.6804553 35.7649787,27.9859113 C33.5334092,33.2855321 28.622423,37 22.8342321,37 C15.1937967,37 9,30.7319865 9,23 C9,15.2680135 15.1937967,9 22.8342321,9 C26.6882871,9 30.3872309,10.7814031 33,13.5687832 Z" id="Combined-Shape-Copy-2" fill="#F5A623"></path></g></g></g></svg>',


  successPopUP: '<svg width="160px" height="190px" viewBox="0 0 160 190" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> <g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.854120164"> <g id="Custom-Preset" transform="translate(-937.000000, -305.000000)"> <g id="Group-8-Copy" transform="translate(857.000000, 175.000000)"> <g id="Group-2" transform="translate(80.000000, 130.000000)"> <rect id="Rectangle-13" stroke="#85FF00" fill="#211643" opacity="0.60452" x="0.5" y="0.5" width="159" height="189" rx="15"></rect> <path d="M23.6875,133.046875 L26.46875,132.609375 C26.6250008,133.723964 27.0598923,134.578122 27.7734375,135.171875 C28.4869827,135.765628 29.4843686,136.0625 30.765625,136.0625 C32.0572981,136.0625 33.0156219,135.799482 33.640625,135.273438 C34.2656281,134.747393 34.578125,134.130212 34.578125,133.421875 C34.578125,132.786455 34.3020861,132.28646 33.75,131.921875 C33.3886701,131.687499 32.5238102,131.393617 31.1553967,131.040222 L30.1733321,130.787845 C28.4848544,130.342883 27.289066,129.952667 26.5859375,129.617188 C25.7890585,129.236977 25.1848979,128.710941 24.7734375,128.039062 C24.3619771,127.367184 24.15625,126.625004 24.15625,125.8125 C24.15625,125.072913 24.3255191,124.388024 24.6640625,123.757812 C25.0026059,123.127601 25.4635387,122.604169 26.046875,122.1875 C26.4843772,121.864582 27.0807254,121.591147 27.8359375,121.367188 C28.5911496,121.143228 29.4010373,121.03125 30.265625,121.03125 C31.5677148,121.03125 32.7109326,121.218748 33.6953125,121.59375 C34.6796924,121.968752 35.4062477,122.476559 35.875,123.117188 C36.3437523,123.757816 36.6666658,124.614578 36.84375,125.6875 L34.09375,126.0625 C33.9687494,125.208329 33.6067738,124.541669 33.0078125,124.0625 C32.4088512,123.583331 31.5625055,123.34375 30.46875,123.34375 C29.1770769,123.34375 28.2552111,123.55729 27.703125,123.984375 C27.1510389,124.41146 26.875,124.911455 26.875,125.484375 C26.875,125.84896 26.9895822,126.177082 27.21875,126.46875 C27.4479178,126.770835 27.8072892,127.020832 28.296875,127.21875 L28.4279786,127.26416 C28.7937007,127.384928 29.578119,127.609373 30.78125,127.9375 L31.4991482,128.132203 C33.1084459,128.57597 34.257158,128.945962 34.9453125,129.242188 C35.7317748,129.580731 36.3489561,130.072913 36.796875,130.71875 C37.2447939,131.364587 37.46875,132.166662 37.46875,133.125 C37.46875,134.062505 37.1953152,134.945308 36.6484375,135.773438 C36.1015598,136.601567 35.3125052,137.242185 34.28125,137.695312 C33.2499948,138.14844 32.0833398,138.375 30.78125,138.375 C28.6249892,138.375 26.9817765,137.927088 25.8515625,137.03125 C24.7213485,136.135412 24.0000016,134.8073 23.6875,133.046875 Z M51.6875,138 L51.6875,135.5625 C50.3958269,137.437509 48.6406361,138.375 46.421875,138.375 C45.4427034,138.375 44.5286501,138.187502 43.6796875,137.8125 C42.8307249,137.437498 42.2005229,136.966149 41.7890625,136.398438 C41.3776021,135.830726 41.0885425,135.135421 40.921875,134.3125 C40.8072911,133.760414 40.75,132.885423 40.75,131.6875 L40.75,121.40625 L43.5625,121.40625 L43.5625,130.609375 C43.5625,132.078132 43.6197911,133.067706 43.734375,133.578125 C43.9114592,134.317712 44.2864555,134.898435 44.859375,135.320312 C45.4322945,135.74219 46.1406208,135.953125 46.984375,135.953125 C47.8281292,135.953125 48.619788,135.736981 49.359375,135.304688 C50.098962,134.872394 50.6223943,134.283858 50.9296875,133.539062 C51.2369807,132.794267 51.390625,131.713549 51.390625,130.296875 L51.390625,121.40625 L54.203125,121.40625 L54.203125,138 L51.6875,138 Z M69.4375,131.921875 L72.203125,132.28125 C71.9010402,134.18751 71.1276104,135.679682 69.8828125,136.757812 C68.6380146,137.835943 67.1093841,138.375 65.296875,138.375 C63.0260303,138.375 61.2005277,137.63282 59.8203125,136.148438 C58.4400973,134.664055 57.75,132.536472 57.75,129.765625 C57.75,127.973949 58.046872,126.406257 58.640625,125.0625 C59.234378,123.718743 60.1380148,122.710941 61.3515625,122.039062 C62.5651102,121.367184 63.8854095,121.03125 65.3125,121.03125 C67.1145923,121.03125 68.5885359,121.486975 69.734375,122.398438 C70.8802141,123.3099 71.6145817,124.604158 71.9375,126.28125 L69.203125,126.703125 C68.942707,125.588536 68.4817741,124.750003 67.8203125,124.1875 C67.1588509,123.624997 66.3593797,123.34375 65.421875,123.34375 C64.0052012,123.34375 62.8541711,123.851557 61.96875,124.867188 C61.0833289,125.882818 60.640625,127.489572 60.640625,129.6875 C60.640625,131.916678 61.0677041,133.536453 61.921875,134.546875 C62.7760459,135.557297 63.8906181,136.0625 65.265625,136.0625 C66.3697972,136.0625 67.291663,135.723962 68.03125,135.046875 C68.770837,134.369788 69.2395823,133.328132 69.4375,131.921875 Z M85.4375,131.921875 L88.203125,132.28125 C87.9010402,134.18751 87.1276104,135.679682 85.8828125,136.757812 C84.6380146,137.835943 83.1093841,138.375 81.296875,138.375 C79.0260303,138.375 77.2005277,137.63282 75.8203125,136.148438 C74.4400973,134.664055 73.75,132.536472 73.75,129.765625 C73.75,127.973949 74.046872,126.406257 74.640625,125.0625 C75.234378,123.718743 76.1380148,122.710941 77.3515625,122.039062 C78.5651102,121.367184 79.8854095,121.03125 81.3125,121.03125 C83.1145923,121.03125 84.5885359,121.486975 85.734375,122.398438 C86.8802141,123.3099 87.6145817,124.604158 87.9375,126.28125 L85.203125,126.703125 C84.942707,125.588536 84.4817741,124.750003 83.8203125,124.1875 C83.1588509,123.624997 82.3593797,123.34375 81.421875,123.34375 C80.0052012,123.34375 78.8541711,123.851557 77.96875,124.867188 C77.0833289,125.882818 76.640625,127.489572 76.640625,129.6875 C76.640625,131.916678 77.0677041,133.536453 77.921875,134.546875 C78.7760459,135.557297 79.8906181,136.0625 81.265625,136.0625 C82.3697972,136.0625 83.291663,135.723962 84.03125,135.046875 C84.770837,134.369788 85.2395823,133.328132 85.4375,131.921875 Z M101.96875,132.65625 L104.875,133.015625 C104.416664,134.71355 103.567715,136.03125 102.328125,136.96875 C101.088535,137.906255 99.505218,138.375 97.578125,138.375 C95.1510295,138.375 93.2265696,137.627612 91.8046875,136.132812 C90.3828054,134.638013 89.671875,132.54168 89.671875,129.84375 C89.671875,127.052069 90.3906178,124.885424 91.828125,123.34375 C93.2656322,121.802076 95.1301969,121.03125 97.421875,121.03125 C99.6406361,121.03125 101.453118,121.786451 102.859375,123.296875 C104.201711,124.738644 104.903377,126.740368 104.964392,129.302103 L104.96875,129.671875 C104.96875,129.838543 104.963542,130.08854 104.953125,130.421875 L92.578125,130.421875 C92.6822922,132.244801 93.197912,133.64062 94.125,134.609375 C95.052088,135.57813 96.2083264,136.0625 97.59375,136.0625 C98.6250052,136.0625 99.5052047,135.791669 100.234375,135.25 C100.963545,134.708331 101.541665,133.843756 101.96875,132.65625 Z M92.734375,128.109375 L102,128.109375 C101.874999,126.713535 101.520836,125.66667 100.9375,124.96875 C100.041662,123.885411 98.8802155,123.34375 97.453125,123.34375 C96.1614519,123.34375 95.0755252,123.776037 94.1953125,124.640625 C93.3150998,125.505213 92.8281255,126.661451 92.734375,128.109375 Z M107.28125,133.046875 L110.0625,132.609375 C110.218751,133.723964 110.653642,134.578122 111.367188,135.171875 C112.080733,135.765628 113.078119,136.0625 114.359375,136.0625 C115.651048,136.0625 116.609372,135.799482 117.234375,135.273438 C117.859378,134.747393 118.171875,134.130212 118.171875,133.421875 C118.171875,132.786455 117.895836,132.28646 117.34375,131.921875 C116.98242,131.687499 116.11756,131.393617 114.749147,131.040222 L113.767082,130.787845 C112.078604,130.342883 110.882816,129.952667 110.179688,129.617188 C109.382809,129.236977 108.778648,128.710941 108.367188,128.039062 C107.955727,127.367184 107.75,126.625004 107.75,125.8125 C107.75,125.072913 107.919269,124.388024 108.257812,123.757812 C108.596356,123.127601 109.057289,122.604169 109.640625,122.1875 C110.078127,121.864582 110.674475,121.591147 111.429688,121.367188 C112.1849,121.143228 112.994787,121.03125 113.859375,121.03125 C115.161465,121.03125 116.304683,121.218748 117.289062,121.59375 C118.273442,121.968752 118.999998,122.476559 119.46875,123.117188 C119.937502,123.757816 120.260416,124.614578 120.4375,125.6875 L117.6875,126.0625 C117.562499,125.208329 117.200524,124.541669 116.601562,124.0625 C116.002601,123.583331 115.156255,123.34375 114.0625,123.34375 C112.770827,123.34375 111.848961,123.55729 111.296875,123.984375 C110.744789,124.41146 110.46875,124.911455 110.46875,125.484375 C110.46875,125.84896 110.583332,126.177082 110.8125,126.46875 C111.041668,126.770835 111.401039,127.020832 111.890625,127.21875 L112.021729,127.26416 C112.282959,127.350423 112.757809,127.489582 113.446286,127.68164 L115.430698,128.226167 C116.863948,128.62845 117.900062,128.967121 118.539062,129.242188 C119.325525,129.580731 119.942706,130.072913 120.390625,130.71875 C120.838544,131.364587 121.0625,132.166662 121.0625,133.125 C121.0625,134.062505 120.789065,134.945308 120.242188,135.773438 C119.69531,136.601567 118.906255,137.242185 117.875,137.695312 C116.843745,138.14844 115.67709,138.375 114.375,138.375 C112.218739,138.375 110.575526,137.927088 109.445312,137.03125 C108.315099,136.135412 107.593752,134.8073 107.28125,133.046875 Z M123.28125,133.046875 L126.0625,132.609375 C126.218751,133.723964 126.653642,134.578122 127.367188,135.171875 C128.080733,135.765628 129.078119,136.0625 130.359375,136.0625 C131.651048,136.0625 132.609372,135.799482 133.234375,135.273438 C133.859378,134.747393 134.171875,134.130212 134.171875,133.421875 C134.171875,132.786455 133.895836,132.28646 133.34375,131.921875 C132.98242,131.687499 132.11756,131.393617 130.749147,131.040222 L129.767082,130.787845 C128.078604,130.342883 126.882816,129.952667 126.179688,129.617188 C125.382809,129.236977 124.778648,128.710941 124.367188,128.039062 C123.955727,127.367184 123.75,126.625004 123.75,125.8125 C123.75,125.072913 123.919269,124.388024 124.257812,123.757812 C124.596356,123.127601 125.057289,122.604169 125.640625,122.1875 C126.078127,121.864582 126.674475,121.591147 127.429688,121.367188 C128.1849,121.143228 128.994787,121.03125 129.859375,121.03125 C131.161465,121.03125 132.304683,121.218748 133.289062,121.59375 C134.273442,121.968752 134.999998,122.476559 135.46875,123.117188 C135.937502,123.757816 136.260416,124.614578 136.4375,125.6875 L133.6875,126.0625 C133.562499,125.208329 133.200524,124.541669 132.601562,124.0625 C132.002601,123.583331 131.156255,123.34375 130.0625,123.34375 C128.770827,123.34375 127.848961,123.55729 127.296875,123.984375 C126.744789,124.41146 126.46875,124.911455 126.46875,125.484375 C126.46875,125.84896 126.583332,126.177082 126.8125,126.46875 C127.041668,126.770835 127.401039,127.020832 127.890625,127.21875 L128.021729,127.26416 C128.282959,127.350423 128.757809,127.489582 129.446286,127.68164 L131.430698,128.226167 C132.863948,128.62845 133.900062,128.967121 134.539062,129.242188 C135.325525,129.580731 135.942706,130.072913 136.390625,130.71875 C136.838544,131.364587 137.0625,132.166662 137.0625,133.125 C137.0625,134.062505 136.789065,134.945308 136.242188,135.773438 C135.69531,136.601567 134.906255,137.242185 133.875,137.695312 C132.843745,138.14844 131.67709,138.375 130.375,138.375 C128.218739,138.375 126.575526,137.927088 125.445312,137.03125 C124.315099,136.135412 123.593752,134.8073 123.28125,133.046875 Z" id="success" fill="#96E93B" fill-rule="nonzero"></path> <path d="M117.477712,33.0251263 C118.844547,34.3919613 118.844547,36.6080387 117.477712,37.9748737 L72.9299845,82.5226009 C71.9391901,83.5133954 70.5021576,83.7859805 69.2658271,83.3403563 C68.5684778,83.2251513 67.8981544,82.8988064 67.35965,82.360302 L44.0251263,59.0257782 C42.6582912,57.6589432 42.6582912,55.4428658 44.0251263,54.0760308 C45.3919613,52.7091957 47.6080387,52.7091957 48.9748737,54.0760308 L70.225,75.327 L112.527964,33.0251263 C113.894799,31.6582912 116.110877,31.6582912 117.477712,33.0251263 Z" id="Combined-Shape" fill="#85FF00"></path> </g> </g> </g> </g></svg>',


  failPopUP: '<svg width="160px" height="190px" viewBox="0 0 160 190" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"> <g id="gCAPTCHA" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="Custom-Preset" transform="translate(-1319.000000, -305.000000)"> <g id="Group-8-Copy" transform="translate(1239.000000, 175.000000)"> <g id="Fail" transform="translate(80.000000, 130.000000)"> <rect id="Rectangle-13" stroke="#FF6034" fill="#211643" opacity="0.60452" x="0.5" y="0.5" width="159" height="189" rx="15"></rect> <path d="M42.421875,116.703125 C42.421875,113.630193 43.2760331,111.354174 44.984375,109.875 C46.4114655,108.645827 48.1510314,108.03125 50.203125,108.03125 C52.4843864,108.03125 54.3489511,108.778638 55.796875,110.273438 C57.2447989,111.768237 57.96875,113.83332 57.96875,116.46875 C57.96875,118.604177 57.6484407,120.283848 57.0078125,121.507812 C56.3671843,122.731777 55.434902,123.682288 54.2109375,124.359375 C52.986973,125.036462 51.6510489,125.375 50.203125,125.375 C47.8801967,125.375 46.0026113,124.630216 44.5703125,123.140625 C43.1380137,121.651034 42.421875,119.505222 42.421875,116.703125 Z M45.3125,116.703125 C45.3125,118.828136 45.776037,120.419266 46.703125,121.476562 C47.630213,122.533859 48.796868,123.0625 50.203125,123.0625 C51.5989653,123.0625 52.760412,122.531255 53.6875,121.46875 C54.614588,120.406245 55.078125,118.786469 55.078125,116.609375 C55.078125,114.557281 54.6119838,113.002609 53.6796875,111.945312 C52.7473912,110.888016 51.5885486,110.359375 50.203125,110.359375 C48.796868,110.359375 47.630213,110.885411 46.703125,111.9375 C45.776037,112.989589 45.3125,114.578114 45.3125,116.703125 Z M60.21875,116.703125 C60.21875,113.630193 61.0729081,111.354174 62.78125,109.875 C64.2083405,108.645827 65.9479064,108.03125 68,108.03125 C70.2812614,108.03125 72.1458261,108.778638 73.59375,110.273438 C75.0416739,111.768237 75.765625,113.83332 75.765625,116.46875 C75.765625,118.604177 75.4453157,120.283848 74.8046875,121.507812 C74.1640593,122.731777 73.231777,123.682288 72.0078125,124.359375 C70.783848,125.036462 69.4479239,125.375 68,125.375 C65.6770717,125.375 63.7994863,124.630216 62.3671875,123.140625 C60.9348887,121.651034 60.21875,119.505222 60.21875,116.703125 Z M63.109375,116.703125 C63.109375,118.828136 63.572912,120.419266 64.5,121.476562 C65.427088,122.533859 66.593743,123.0625 68,123.0625 C69.3958403,123.0625 70.557287,122.531255 71.484375,121.46875 C72.411463,120.406245 72.875,118.786469 72.875,116.609375 C72.875,114.557281 72.4088588,113.002609 71.4765625,111.945312 C70.5442662,110.888016 69.3854236,110.359375 68,110.359375 C66.593743,110.359375 65.427088,110.885411 64.5,111.9375 C63.572912,112.989589 63.109375,114.578114 63.109375,116.703125 Z M79.0625,131.359375 L79.0625,108.40625 L81.625,108.40625 L81.625,110.5625 C82.2291697,109.718746 82.9114545,109.08594 83.671875,108.664062 C84.4322955,108.242185 85.3541613,108.03125 86.4375,108.03125 C87.8541738,108.03125 89.1041613,108.39583 90.1875,109.125 C91.2708387,109.85417 92.0885389,110.882806 92.640625,112.210938 C93.1927111,113.539069 93.46875,114.994784 93.46875,116.578125 C93.46875,118.27605 93.1640655,119.804681 92.5546875,121.164062 C91.9453095,122.523444 91.0599016,123.565101 89.8984375,124.289062 C88.7369734,125.013024 87.5156314,125.375 86.234375,125.375 C85.2968703,125.375 84.4557329,125.177085 83.7109375,124.78125 C82.9661421,124.385415 82.3541691,123.88542 81.875,123.28125 L81.875,131.359375 L79.0625,131.359375 Z M81.609375,116.796875 C81.609375,118.932302 82.0416623,120.510412 82.90625,121.53125 C83.7708377,122.552088 84.8177022,123.0625 86.046875,123.0625 C87.2968812,123.0625 88.367183,122.533859 89.2578125,121.476562 C90.148442,120.419266 90.59375,118.781261 90.59375,116.5625 C90.59375,114.447906 90.1588585,112.864589 89.2890625,111.8125 C88.4192665,110.760411 87.3802144,110.234375 86.171875,110.234375 C84.9739523,110.234375 83.9140671,110.794265 82.9921875,111.914062 C82.0703079,113.03386 81.609375,114.661448 81.609375,116.796875 Z M95.734375,120.046875 L98.515625,119.609375 C98.6718758,120.723964 99.1067673,121.578122 99.8203125,122.171875 C100.533858,122.765628 101.531244,123.0625 102.8125,123.0625 C104.104173,123.0625 105.062497,122.799482 105.6875,122.273438 C106.312503,121.747393 106.625,121.130212 106.625,120.421875 C106.625,119.786455 106.348961,119.28646 105.796875,118.921875 C105.435545,118.687499 104.570685,118.393617 103.202272,118.040222 L102.220207,117.787845 C100.531729,117.342883 99.335941,116.952667 98.6328125,116.617188 C97.8359335,116.236977 97.2317729,115.710941 96.8203125,115.039062 C96.4088521,114.367184 96.203125,113.625004 96.203125,112.8125 C96.203125,112.072913 96.3723941,111.388024 96.7109375,110.757812 C97.0494809,110.127601 97.5104137,109.604169 98.09375,109.1875 C98.5312522,108.864582 99.1276004,108.591147 99.8828125,108.367188 C100.638025,108.143228 101.447912,108.03125 102.3125,108.03125 C103.61459,108.03125 104.757808,108.218748 105.742188,108.59375 C106.726567,108.968752 107.453123,109.476559 107.921875,110.117188 C108.390627,110.757816 108.713541,111.614578 108.890625,112.6875 L106.140625,113.0625 C106.015624,112.208329 105.653649,111.541669 105.054688,111.0625 C104.455726,110.583331 103.60938,110.34375 102.515625,110.34375 C101.223952,110.34375 100.302086,110.55729 99.75,110.984375 C99.1979139,111.41146 98.921875,111.911455 98.921875,112.484375 C98.921875,112.84896 99.0364572,113.177082 99.265625,113.46875 C99.4947928,113.770835 99.8541642,114.020832 100.34375,114.21875 L100.474854,114.26416 C100.840576,114.384928 101.624994,114.609373 102.828125,114.9375 L103.546023,115.132203 C105.155321,115.57597 106.304033,115.945962 106.992188,116.242188 C107.77865,116.580731 108.395831,117.072913 108.84375,117.71875 C109.291669,118.364587 109.515625,119.166662 109.515625,120.125 C109.515625,121.062505 109.24219,121.945308 108.695312,122.773438 C108.148435,123.601567 107.35938,124.242185 106.328125,124.695312 C105.29687,125.14844 104.130215,125.375 102.828125,125.375 C100.671864,125.375 99.0286515,124.927088 97.8984375,124.03125 C96.7682235,123.135412 96.0468766,121.8073 95.734375,120.046875 Z M114.359375,119.3125 L113.5,107.171875 L113.5,102.09375 L116.984375,102.09375 L116.984375,107.171875 L116.171875,119.3125 L114.359375,119.3125 Z M113.625,125 L113.625,121.796875 L116.859375,121.796875 L116.859375,125 L113.625,125 Z M27.3828125,158.484375 L27.7890625,160.96875 C26.9973919,161.135418 26.2890656,161.21875 25.6640625,161.21875 C24.6432241,161.21875 23.8515653,161.057293 23.2890625,160.734375 C22.7265597,160.411457 22.3307303,159.986982 22.1015625,159.460938 C21.8723947,158.934893 21.7578125,157.828133 21.7578125,156.140625 L21.7578125,146.59375 L19.6953125,146.59375 L19.6953125,144.40625 L21.7578125,144.40625 L21.7578125,140.296875 L24.5546875,138.609375 L24.5546875,144.40625 L27.3828125,144.40625 L27.3828125,146.59375 L24.5546875,146.59375 L24.5546875,156.296875 C24.5546875,157.098962 24.6041662,157.614582 24.703125,157.84375 C24.8020838,158.072918 24.9635405,158.255208 25.1875,158.390625 C25.4114595,158.526042 25.7317688,158.59375 26.1484375,158.59375 C26.4609391,158.59375 26.8723933,158.557292 27.3828125,158.484375 Z M30.1015625,161 L30.1015625,144.40625 L32.6328125,144.40625 L32.6328125,146.921875 C33.2786491,145.744786 33.8749973,144.968752 34.421875,144.59375 C34.9687527,144.218748 35.5703092,144.03125 36.2265625,144.03125 C37.1744839,144.03125 38.1380159,144.33333 39.1171875,144.9375 L38.1484375,147.546875 C37.4609341,147.140623 36.7734409,146.9375 36.0859375,146.9375 C35.4713511,146.9375 34.9192733,147.122394 34.4296875,147.492188 C33.9401017,147.861981 33.5911469,148.374997 33.3828125,149.03125 C33.0703109,150.03125 32.9140625,151.124994 32.9140625,152.3125 L32.9140625,161 L30.1015625,161 Z M40.6640625,167.390625 L40.3515625,164.75 C40.9661489,164.916668 41.5026019,165 41.9609375,165 C42.5859406,165 43.0859356,164.895834 43.4609375,164.6875 C43.8359394,164.479166 44.143228,164.187502 44.3828125,163.8125 C44.5472478,163.551338 44.805988,162.930914 45.1590398,161.951213 L45.3696873,161.35875 C45.4055206,161.261251 45.4463539,161.152084 45.4921875,161.03125 L39.1953125,144.40625 L42.2265625,144.40625 L45.6796875,154.015625 C46.1276064,155.234381 46.5286441,156.515618 46.8828125,157.859375 C47.2057308,156.567702 47.5911436,155.307298 48.0390625,154.078125 L51.5859375,144.40625 L54.3984375,144.40625 L47.8391104,161.938235 C47.2797016,163.409105 46.8359391,164.445309 46.5078125,165.046875 C46.00781,165.973963 45.4348991,166.653644 44.7890625,167.085938 C44.1432259,167.518231 43.3724003,167.734375 42.4765625,167.734375 C41.9348931,167.734375 41.3307325,167.619793 40.6640625,167.390625 Z M76.5078125,158.953125 C75.4661406,159.838546 74.4635465,160.46354 73.5,160.828125 C72.5364535,161.19271 71.5026097,161.375 70.3984375,161.375 C68.5755117,161.375 67.1744841,160.929692 66.1953125,160.039062 C65.2161409,159.148433 64.7265625,158.010424 64.7265625,156.625 C64.7265625,155.812496 64.9114565,155.070316 65.28125,154.398438 C65.6510435,153.726559 66.1354137,153.187502 66.734375,152.78125 C67.3333363,152.374998 68.0078087,152.067709 68.7578125,151.859375 C69.25469,151.728124 69.979371,151.601094 70.9318737,151.478281 L71.2578125,151.4375 C73.5286572,151.166665 75.2005155,150.843752 76.2734375,150.46875 L76.2890625,149.734375 L76.2890625,149.734375 C76.2890625,148.588536 76.0234402,147.781252 75.4921875,147.3125 C74.7734339,146.67708 73.7057363,146.359375 72.2890625,146.359375 C70.9661392,146.359375 69.9895865,146.591144 69.359375,147.054688 C68.7291635,147.518231 68.2630223,148.338536 67.9609375,149.515625 L65.2109375,149.140625 C65.4609387,147.963536 65.872393,147.013024 66.4453125,146.289062 C67.018232,145.565101 67.8463488,145.007814 68.9296875,144.617188 C70.0130262,144.226561 71.268222,144.03125 72.6953125,144.03125 C74.1119863,144.03125 75.2630164,144.197915 76.1484375,144.53125 C77.0338586,144.864585 77.6848938,145.283852 78.1015625,145.789062 C78.5182312,146.294273 78.809895,146.932288 78.9765625,147.703125 C79.0631014,148.145435 79.1096987,148.916138 79.1163554,150.015254 L79.1186725,154.736121 C79.1285726,156.95419 79.1879729,158.378075 79.296875,159.007812 C79.4166673,159.700524 79.6536441,160.36458 80.0078125,161 L77.0703125,161 C76.7786444,160.416664 76.5911463,159.734379 76.5078125,158.953125 Z M76.2734375,152.671875 C75.320655,153.060766 73.9232606,153.395207 72.081217,153.675208 L71.6796875,153.734375 C70.5234317,153.901043 69.7057316,154.088541 69.2265625,154.296875 C68.7473934,154.505209 68.3776055,154.809894 68.1171875,155.210938 C67.8567695,155.611981 67.7265625,156.057289 67.7265625,156.546875 C67.7265625,157.296879 68.0104138,157.921873 68.578125,158.421875 C69.1458362,158.921877 69.976557,159.171875 71.0703125,159.171875 C72.1536512,159.171875 73.1171833,158.934898 73.9609375,158.460938 C74.8046917,157.986977 75.4244772,157.338546 75.8203125,156.515625 C76.1223973,155.880205 76.2734375,154.942715 76.2734375,153.703125 L76.2734375,152.671875 Z M82.9609375,162.375 L85.6953125,162.78125 C85.8098964,163.625004 86.1276016,164.239581 86.6484375,164.625 C87.3463577,165.145836 88.2994731,165.40625 89.5078125,165.40625 C90.8099023,165.40625 91.8151006,165.145836 92.5234375,164.625 C93.2317744,164.104164 93.7109363,163.375005 93.9609375,162.4375 C94.1067716,161.86458 94.1744792,160.661468 94.1640625,158.828125 C92.9348897,160.276049 91.403655,161 89.5703125,161 C87.2890511,161 85.5234437,160.177092 84.2734375,158.53125 C83.0234313,156.885408 82.3984375,154.91147 82.3984375,152.609375 C82.3984375,151.026034 82.684893,149.565111 83.2578125,148.226562 C83.830732,146.888014 84.6614529,145.85417 85.75,145.125 C86.8385471,144.39583 88.1171802,144.03125 89.5859375,144.03125 C91.5442806,144.03125 93.1588478,144.822909 94.4296875,146.40625 L94.4296875,144.40625 L97.0234375,144.40625 L97.0234375,158.75 C97.0234375,161.333346 96.7604193,163.164057 96.234375,164.242188 C95.7083307,165.320318 94.8750057,166.171872 93.734375,166.796875 C92.5937443,167.421878 91.1901125,167.734375 89.5234375,167.734375 C87.5442609,167.734375 85.9453186,167.289067 84.7265625,166.398438 C83.5078064,165.507808 82.9192706,164.166676 82.9609375,162.375 Z M85.2890625,152.40625 C85.2890625,154.583344 85.7213498,156.17187 86.5859375,157.171875 C87.4505252,158.17188 88.5338477,158.671875 89.8359375,158.671875 C91.1276106,158.671875 92.2109331,158.174484 93.0859375,157.179688 C93.9609419,156.184891 94.3984375,154.625011 94.3984375,152.5 C94.3984375,150.46874 93.9479212,148.937505 93.046875,147.90625 C92.1458288,146.874995 91.0599022,146.359375 89.7890625,146.359375 C88.5390563,146.359375 87.4765669,146.867182 86.6015625,147.882812 C85.7265581,148.898443 85.2890625,150.40624 85.2890625,152.40625 Z M112.101562,158.953125 C111.059891,159.838546 110.057296,160.46354 109.09375,160.828125 C108.130204,161.19271 107.09636,161.375 105.992188,161.375 C104.169262,161.375 102.768234,160.929692 101.789062,160.039062 C100.809891,159.148433 100.320312,158.010424 100.320312,156.625 C100.320312,155.812496 100.505206,155.070316 100.875,154.398438 C101.244794,153.726559 101.729164,153.187502 102.328125,152.78125 C102.927086,152.374998 103.601559,152.067709 104.351562,151.859375 C104.84844,151.728124 105.573121,151.601094 106.525624,151.478281 L106.851562,151.4375 C109.122407,151.166665 110.794265,150.843752 111.867188,150.46875 L111.882812,149.734375 L111.882812,149.734375 C111.882812,148.588536 111.61719,147.781252 111.085938,147.3125 C110.367184,146.67708 109.299486,146.359375 107.882812,146.359375 C106.559889,146.359375 105.583336,146.591144 104.953125,147.054688 C104.322914,147.518231 103.856772,148.338536 103.554688,149.515625 L100.804688,149.140625 C101.054689,147.963536 101.466143,147.013024 102.039062,146.289062 C102.611982,145.565101 103.440099,145.007814 104.523438,144.617188 C105.606776,144.226561 106.861972,144.03125 108.289062,144.03125 C109.705736,144.03125 110.856766,144.197915 111.742188,144.53125 C112.627609,144.864585 113.278644,145.283852 113.695312,145.789062 C114.111981,146.294273 114.403645,146.932288 114.570312,147.703125 C114.656851,148.145435 114.703449,148.916138 114.710105,150.015254 L114.712423,154.736121 C114.722323,156.95419 114.781723,158.378075 114.890625,159.007812 C115.010417,159.700524 115.247394,160.36458 115.601562,161 L112.664062,161 C112.372394,160.416664 112.184896,159.734379 112.101562,158.953125 Z M111.867188,152.671875 C110.914405,153.060766 109.517011,153.395207 107.674967,153.675208 L107.273438,153.734375 C106.117182,153.901043 105.299482,154.088541 104.820312,154.296875 C104.341143,154.505209 103.971355,154.809894 103.710938,155.210938 C103.45052,155.611981 103.320312,156.057289 103.320312,156.546875 C103.320312,157.296879 103.604164,157.921873 104.171875,158.421875 C104.739586,158.921877 105.570307,159.171875 106.664062,159.171875 C107.747401,159.171875 108.710933,158.934898 109.554688,158.460938 C110.398442,157.986977 111.018227,157.338546 111.414062,156.515625 C111.716147,155.880205 111.867188,154.942715 111.867188,153.703125 L111.867188,152.671875 Z M119.085938,141.328125 L119.085938,138.09375 L121.898438,138.09375 L121.898438,141.328125 L119.085938,141.328125 Z M119.085938,161 L119.085938,144.40625 L121.898438,144.40625 L121.898438,161 L119.085938,161 Z M126.179688,161 L126.179688,144.40625 L128.710938,144.40625 L128.710938,146.765625 C129.929694,144.942699 131.690093,144.03125 133.992188,144.03125 C134.992192,144.03125 135.911454,144.210936 136.75,144.570312 C137.588546,144.929689 138.216144,145.401039 138.632812,145.984375 C139.049481,146.567711 139.341145,147.260413 139.507812,148.0625 C139.61198,148.583336 139.664062,149.494785 139.664062,150.796875 L139.664062,161 L136.851562,161 L136.851562,150.90625 C136.851562,149.760411 136.742189,148.903649 136.523438,148.335938 C136.304686,147.768226 135.916669,147.315106 135.359375,146.976562 C134.802081,146.638019 134.148441,146.46875 133.398438,146.46875 C132.200515,146.46875 131.166671,146.848955 130.296875,147.609375 C129.427079,148.369795 128.992188,149.812489 128.992188,151.9375 L128.992188,161 L126.179688,161 Z" id="oops!tryagain" fill="#FF6034" fill-rule="nonzero"></path> <path d="M56.732233,26.732233 C57.7085438,25.7559223 59.2914562,25.7559223 60.267767,26.732233 L60.267767,26.732233 L81.481,47.946 L102.694174,26.732233 C103.670485,25.7559223 105.253397,25.7559223 106.229708,26.732233 C107.206018,27.7085438 107.206018,29.2914562 106.229708,30.267767 L85.016,51.481 L106.229708,72.6941738 C107.16357,73.6280363 107.204173,75.1168991 106.351516,76.0990225 L106.229708,76.2297077 C105.253397,77.2060185 103.670485,77.2060185 102.694174,76.2297077 L102.694174,76.2297077 L81.481,55.016 L60.267767,76.2297077 C59.2914562,77.2060185 57.7085438,77.2060185 56.732233,76.2297077 C55.7559223,75.253397 55.7559223,73.6704846 56.732233,72.6941738 L77.946,51.481 L56.732233,30.267767 C55.7983706,29.3339045 55.7577679,27.8450416 56.6104249,26.8629183 Z" id="Combined-Shape" fill="#FF6034"></path> </g> </g> </g> </g></svg>'
}


/* 2.1 - Anchor */
function Anchor() {
  // elements of the anchor
  const anchor = document.createElement("div");
  const target = document.querySelector(".quad_captcha_anchor");

  const checkbox = document.createElement("input");
  checkbox.setAttribute('type', 'checkbox');
  checkbox.setAttribute("id", "quad_captcha_checkbox");
  checkbox.setAttribute('name', 'quad_captcha');
  

  const label = document.createElement("label");
  label.setAttribute("for", "quad_captcha_checkbox");
  label.append("I'm Human");
  label.style.fontSize = "16px";
  label.style.color = "#393939";
  label.style.opacity = "1";

  // anchor element style
  const anchorStyle = anchor.style;
  anchorStyle.boxSizing = "border-box";
  anchorStyle.width = "100%";
  anchorStyle.minWidth = "280px";
  anchorStyle.height = "48px";
  anchorStyle.borderRadius = "7px";
  anchorStyle.backgroundColor = "f0f0f0";
  anchorStyle.border = "1px solid #727272";
  anchorStyle.margin = "10px auto";
  anchorStyle.padding = "10px";

  // checkbox element style
  const checkStyle = checkbox.style;
  // checkStyle.width = "26px";
  // checkStyle.height = "26px";
  checkStyle.backgroundColor = "#b7b7b7";
  checkStyle.marginRight = "10px";
  checkStyle.height = '24px';
  checkStyle.width = '24px';
  checkStyle.cursor = 'pointer'

  append(anchor, checkbox);
  append(anchor, label);
  append(target, anchor);

  checkbox.onmousemove = function () {
    // hover effect - mouse over
  };

  checkbox.onmouseout = function () {
    // hover effect - mouse leav
  };

  checkbox.onclick = function (e) {
    e.preventDefault();
    let wHeight = window.innerHeight;
    if (wHeight < 450) {
      alert("Please put your device in Portraite mode, and try again!");
    } else {
      UI.open();
      UI.centerUI();
      buildGame();
      SCROLL.disable();
    }
  };

  return {
    checked: function () {
      return (checkbox.checked = true);
    },
  };
}


/* 2.2 = Buttons */
function Icons() {

  // general style for buttons
  function btnStyle(button) {
    const style = button.style;

    style.width = '45px';
    style.height = '45px';
    style.padding = '0';
    style.boxSizing = 'border-box';
    style.display = 'inline-block';
    style.cursor = 'pointer';
    //    style.margin = '0';
    //    style.marginLeft = '60px';
    //    style.marginRight = '60px';
    style.borderRadius = '0';
    style.opacity = '0.8';
    style.border = 'none';
    style.transition = 'all 0.3s';
    style.backgroundColor = colors.transparent;

    button.onmouseover = function () {
      style.opacity = '1';
      style.filter = "alpha(opacity=80)"; // IE
      style.transform = 'scale(1.1)';
      style.msTransform = 'scale(1.1)'; // IE
    }

    button.onmouseout = function () {
      style.opacity = '0.8';
      style.filter = "alpha(opacity=100)"; // IE
      style.transform = 'scale(1)';
      style.msTransform = 'scale(1)'; // IE

    }

    button.onfocus = function () {
      style.outline = 'none';
    }
  }

  function createButton() {
    const button = document.createElement('button');
    button.setAttribute('type', 'button');
    btnStyle(button);
    return button;
  }

  // icon names
  const closeBtn = createButton();
  const infoBtn = createButton();
  const restartBtn = createButton();


  closeBtn.innerHTML = SVG.closeIcon;
  restartBtn.innerHTML = SVG.restartIcon;
  infoBtn.innerHTML = SVG.infoIcon;

  infoBtn.style.marginLeft = '65px';
  infoBtn.style.marginRight = '30px';
  restartBtn.style.marginRight = '30px';


  return {
    closeBtn,
    restartBtn,
    infoBtn
  }

}

const ICON = new Icons();


/* 2.2 - UI */
function UIObject() {

  /*--------- private functions --------*/


  function fade(element) {
    let style = element.style;
    let styled = window.getComputedStyle(element, null)
      .getPropertyValue('opacity');

    if (styled == 0) {

      style.visibility = 'visible';
      style.opacity = '1';


    } else {
      style.visibility = 'hidden';
      style.opacity = '0';
    }

  }

  function fadeCont(element) {
    let style = element.style;
    style.opacity = '0';
    style.visibility = 'hidden';


  }

  function toggle(node, element, toggle, func) {

    // node: parent node for the element.
    // element: the element to be toggled.
    // toggle: if true? toggle, else: remove element.
    // func: a callback tha runs when elment is toggled.

    if (toggle) {
      if (node.lastChild == element) {
        node.removeChild(element);
        func();

      } else {
        append(node, element);
      }

    } else {
      if (node.lastChild == element) {
        node.removeChild(element);
      }
    }
  }

  // clear all intervals
  function clearIntervals() {
    for (let i = 0; i < 100; i++) {
      window.clearInterval(i);
    }

  }

  // check if a node is in page
  function isInPage(node) {
    if (document.body.contains(node)) {
      return true;
    } else {
      return false;
    }
  }

  /*--------- creating elements --------*/

  const overlay = createDiv();
  const wrapper = createDiv();
  const backGround = createDiv();
  const frame = createDiv();

  const container = createDiv();

  const titleBlock = createDiv();

  const popUp = createDiv();
  const timer = createDiv();
  const info = createDiv();
  const buttonBlock = createDiv();

  const popUPBlock = createDiv();
  const successPOPUP = createDiv();
  const failPOPUP = createDiv();


  /*--------- Styles of the UI --------*/
  const STYLES = {

    // styles / general
    resetStyle: "font-family: Arial; paddng: 0; margin: 0; box-sizing: border-box;",
    centerStyle: "left: 50%; top: 50%; transform: translate(-50%, -50%);",
    boxShadow: "box-shadow: 0 0 20px #333333;",
    absPos: "position: absolute;",
    borderBox: 'box-sizing: border-box; -webkit-box-sizing: border-box;',

    // styles / specific
    // overlay style
    overlayStyle: "position: absolute;" +
      "width: " + window.innerWidth + "px;" +
      "height: " + window.innerHeight + "px;" +
      "top: " + window.pageYOffset + "px;" +
      "left: " + window.pageXOffset + "px;" +
      "background-color: rgba(72, 72, 72, 0.8);" +
      "color: #fff; font-family: Arial;",

    // wrapper style
    wrapperStyle: "width: 320px; height: 450px; border-radius: 30px;" +
      "background-color: transparent;  position: relative;",

    frameStyle: "width: 320px; height: 450px; border-radius: 30px;" +
      " background-color: transparent;",


    // info style
    infoStyle: "width: 300px; height: 300px; font-size: 22px; text-align: left;" +
      "margin: 5px 5px; border-radius: 10px; cursor: default; position: absolute;" +
      "background-color: transparent; padding: 5px 10px; opacity: 0.9;" +
      "color: #F5A623;",



    /* title style */
    titleBlockStyle: "width: 100%; height: 70px; margin: 0; padding: 5px 0;" +
      "font-size: 26px; font-weight: bold; background-color: " + colors.transparent + "; text-align: center;",

    titleStyle: "margin: 0; padding: 0; cursor: default; color: #F5A623",


    // button container style
    buttonBlockStyle: "width: 320; height: 60px; margin-top: 5px; padding: 0;" +

      "background-color: " + colors.transparent + ";",

    // container style
    containerStyle: "width: 320px; height: 320px; margin: 0 auto; position: relative;" +
      "background-color: transparent;" +
      "border-top: 1px solid #915f0b; border-bottom: 1px solid #915f0b;",


    timerStyle: "width: 100px; height: 40px; border: 4px solid #F5A623; border-radius: 5px;" +
      "text-align: center; font-size: 28px; position: absolute; cursor: default; color: #F5A623;" +
      "background-color:" + colors.transparent + "; font-weight: 500; padding: 8px;",


    popUPBlockStyle: "width: 320px; height: 320px; background-color: #4A4A4A;" +
      "font-size: 32px;",

    faded: "display: block; opacity: 0; visibility: hidden; transition: visibility .5s linear, opacity .5s linear;"


  }

  // TODO: modify UI style

  // horizontal line breaker
  const lineBreak = '<hr style="height:1px;border:none;color:#ccc;background-color:#F5A623; margin: 10px 0; opacity: 0.9;"/>';

  /* 1. instruction message */
  const infoMSG =

    '<p>Look at the Circles for 3sec, after the numbers desapeard, click them One-by-One in the Ascending Order.' + lineBreak + 'Click on the reload button for new game.</p>' + lineBreak + gCLink;


  // text for title
  const titleMSg =
    '<p>Memorize the numbers<br/>' +
    ' in the Ascending Order.</p>';


  backGround.innerHTML = SVG.frameBack;
  info.innerHTML = infoMSG;
  successPOPUP.innerHTML = SVG.successPopUP;
  failPOPUP.innerHTML = SVG.failPopUP;


  // Assembling
  append(overlay, wrapper);
  append(wrapper, backGround)
  append(wrapper, frame);
  append(frame, titleBlock);
  append(frame, container);
  append(frame, buttonBlock);
  //  append(frame, popUPBlock);
  append(frame, failPOPUP);
  append(frame, successPOPUP);

  append(buttonBlock, ICON.infoBtn);
  append(buttonBlock, ICON.restartBtn);
  append(buttonBlock, ICON.closeBtn);

  titleBlock.innerHTML = titleMSg;
  const title = titleBlock.firstChild;




  /*--------- Styling the components --------*/

  styleElem(overlay, STYLES.resetStyle + STYLES.overlayStyle + STYLES.borderBox);
  styleElem(wrapper, STYLES.wrapperStyle + STYLES.centerStyle);
  styleElem(backGround, STYLES.absPos + STYLES.frameStyle + STYLES.centerStyle);
  styleElem(frame, STYLES.absPos + STYLES.frameStyle + STYLES.centerStyle);
  styleElem(titleBlock, STYLES.titleBlockStyle + STYLES.resetStyle);
  styleElem(title, STYLES.titleStyle);
  styleElem(container, STYLES.containerStyle);
  styleElem(buttonBlock, STYLES.resetStyle + STYLES.buttonBlockStyle)
  styleElem(timer, STYLES.timerStyle + STYLES.centerStyle + STYLES.boxShadow)
  styleElem(info, STYLES.infoStyle + STYLES.centerStyle)

  styleElem(popUPBlock, STYLES.centerStyle + STYLES.absPos + STYLES.popUPBlockStyle + STYLES.faded);
  styleElem(successPOPUP, STYLES.centerStyle + STYLES.absPos + STYLES.faded);
  styleElem(failPOPUP, STYLES.centerStyle + STYLES.absPos + STYLES.faded);





  // Centering with resize event
  window.onresize = function () {

    // center the UI to the screen
    if (isInPage(overlay)) {
      overlay.style.width = window.innerWidth + 'px';
      overlay.style.height = window.innerHeight + 'px';
      overlay.style.top = window.pageYOffset + 'px';
      overlay.style.left = window.pageXOffset + 'px';

    }

    // close the game if width of the window is < 500px.
    if (window.innerHeight < 500) {
      if (isInPage(overlay)) {
        UI.close();
        SCROLL.enable();

      }
    }

    // scale size of the UI with 1.3 for bigger screens.
    if (window.innerHeight > 700 && window.innerWidth > 1200) {
      overlay.style.transform = 'scale(1.4)';
      overlay.style.msTransform = 'scale(1.4)';
    }
  }



  window.onscroll = function () {
    overlay.style.top = window.pageYOffset + 'px';
    overlay.style.left = window.pageXOffset + 'px';
  }


  // close button event
  ICON.closeBtn.onclick = function () {

    // at this point we have to clear all intervals
    clearIntervals();
    UI.close();
    SCROLL.enable();
    this.style.transform = 'scale(1)';
    this.style.opacity = '0.8';

    toggle(frame, info);
  }

  // restart button action
  ICON.restartBtn.onclick = function () {
    //    UI.removeTimer();
    UI.clearContainer();

    toggle(frame, info);
    toggle(frame, failPOPUP);
    clearIntervals();

    //    fadeCont(popUPBlock);

    reStart();
  }


  ICON.infoBtn.onclick = function () {
    clearIntervals();
    UI.removeTimer();
    UI.clearContainer();
    //    popUp.innerHTML = infoMSG;
    fade(popUPBlock);
    toggle(frame, info, true, reStart);
  }

  /*--------- properties and methodes --------*/
  return {

    container: function () {
      return container;
    },

    centerUI: function () {
      if (isInPage(overlay)) {

        let style = overlay.style;
        style.width = window.innerWidth + 'px';
        style.height = window.innerHeight + 'px';
        style.top = window.pageYOffset + 'px';
        style.left = window.pageXOffset + 'px';

      }
    },

    open: function () {
      return document.body.appendChild(overlay);
    },

    close: function () {
      clearIntervals();
      if (isInPage(overlay)) {
        document.body.removeChild(overlay);
      }
    },

    //    timer: function (func) {
    //      popUPBlock.style.opacity = '1';
    //      popUPBlock.style.visibility = 'visible';
    //      append(wrapper, timer);
    //      let seconds = 1;
    //      let timerId = setInterval(updateTimer, 1000);
    //
    //      timer.innerHTML = seconds;
    //
    //      function updateTimer() {
    //        seconds--;
    //        timer.innerHTML = seconds;
    //
    //        if (seconds === 0) {
    //          clearInterval(timerId);
    //          setTimeout(function () {
    //            wrapper.removeChild(timer);
    //
    //            popUPBlock.style.opacity = '0';
    //            popUPBlock.style.visibility = 'hidden';
    //
    //            func()
    //          }, 1000);
    //
    //        }
    //      }
    //    },

    ready: function(func) {
      popUPBlock.style.opacity = '1';
      popUPBlock.style.visibility = 'visible';
      append(frame, timer);
      timer.innerHTML = 'Ready!';
        setTimeout(function() {
          frame.removeChild(timer);
          popUPBlock.style.opacity = '0';
          popUPBlock.style.visibility = 'hidden';
          func(); // start game after showing ready alert.
        }, 1500);
    },

    failPOPUp: function () {

      fade(failPOPUP);

    },

    successPOPUp: function () {

      fade(successPOPUP)
    },

    clearContainer: function () {
      while (container.firstChild) {
        container.removeChild(container.firstChild);
      }
    },

    removeTimer: function () {
      toggle(wrapper, timer);
    },

    fadeContainer: function () {
      fade(popUPBlock);
    }
  } // return

}


/* 2.3 - Circle Object */
function Circle(value, randomX, randomY) {

  // Prototyping

  this.value = value;
  this.randomX = randomX;
  this.randomY = randomY;

  let moveCircle;

  let circle = document.createElement('input');

  circle.setAttribute('type', 'button');
  circle.setAttribute('value', value);

  let cSTYLE =
    "width: 60px; height: 60px; max-width: 60px; max-height: 60px;" +
    "box-sizing: border-box; -webkit-box-sizing: border-box;" +
    "font-size: 50px; border-radius: 100%; text-decoration: none;" +
    "color: #F5A623; border: 4px solid #F5A623; cursor: pointer; position: absolute;" +
    "left: " + randomX + "px;" + "top: " + randomY + "px;" +
    "transition: box-shadow 0.3s, background-color 0.5s;" +
    "background-color: transparent;" +
    "outline: 0; padding: 0; margin: 0; text-align: center;" +
    "font-weight: 500;";

  styleElem(circle, cSTYLE)

  const style = circle.style;

  /* chage style with hover effect */
  circle.onmouseover = function () {
    style.boxShadow = '0px 0px 20px #F5A623';
  }

  circle.onmouseout = function () {
    style.boxShadow = 'none';
  }



  circle.onfocus = function () {
    style.outline = 'none';
  }


  // disable circle
  function disable() {
    circle.setAttribute('disabled', 'disabled');
    style.opacity = '0.7';
    style.cursor = 'default';
    style.boxShadow = 'none';
  }


  /* properties for moving the object */

  // frame per second
  const FPS = 60;

  // element size
  let elementSize = '60px';

  // element x position, y Position
  let elementXPos;
  let elementYPos;

  // element X speed, Y speed
  let Xspeed;
  let Yspeed;

  // edges
  let width = 260;
  let height = 260;

  // element starting position
  elementXPos = randomX;
  elementYPos = randomY;

  // element speed
  Xspeed = 15 / FPS;
  Yspeed = 15 / FPS;

  // random direction
  if (randomInt(0, 1) == 0) {
    Xspeed = -Xspeed;
  }

  if (randomInt(0, 1) == 0) {
    Yspeed = -Yspeed;
  }




  // UPDATE FUNCTION
  function update() {


    elementXPos += Xspeed;
    elementYPos += Yspeed;


    circle.style.left = elementXPos + 'px';
    circle.style.top = elementYPos + 'px';

    // change direction randomly
    if (randomInt(0, 150) == 1) {
      Xspeed = -Xspeed;
    }

    if (randomInt(0, 150) == 1) {
      Yspeed = -Yspeed;
    }



    // Horizontal movement
    if (elementXPos < 0 && Xspeed < 0) {
      Xspeed = -Xspeed;
    }

    if (elementXPos > width && Xspeed > 0) {
      Xspeed = -Xspeed;
    }

    // Vertical movement
    if (elementYPos < 0 && Yspeed < 0) {
      Yspeed = -Yspeed;
    }

    if (elementYPos > height && Yspeed > 0) {
      Yspeed = -Yspeed;
    }

  } // update


  // methodes for the circle
  return {
    circle,

    hideValue: function () {
      style.fontSize = '0px';
    },

    showValue: function () {
      style.fontSize = '54px';
    },

    move: function () {
      moveCircle = setInterval(update, 800 / FPS);
    },

    stop: function () {
      for (let i = 0; i < 100; i++) {
        window.clearInterval(moveCircle);
      }

      disable();
    },

    rightPlay: function () {
      disable()
      //      style.backgroundColor = '#138b13';
    },

    wrongPlay: function () {
      disable();
      circle.setAttribute('value', 'X');
      //      style.backgroundColor = colors.redOrange;
    },

    disable: function () {
      disable();
    }
  }
}


/* 2.4 handling sroll bar */
function Scroll() {

  // left: 37, up: 38, right: 39, down: 40,
  // spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36
  const keys = {
    37: 1,
    38: 1,
    39: 1,
    40: 1
  };

  function preventDefault(e) {
    e = e || window.event;
    if (e.preventDefault)
      e.preventDefault();
    e.returnValue = false;
  }

  function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
      preventDefault(e);
      return false;
    }
  }

  return {
    disable: function () {
      if (window.addEventListener) // older FF
        window.addEventListener('DOMMouseScroll', preventDefault, false);
      window.onwheel = preventDefault; // modern standard
      window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
      window.ontouchmove = preventDefault; // mobile
      document.onkeydown = preventDefaultForScrollKeys;
    },

    enable: function () {
      if (window.removeEventListener)
        window.removeEventListener('DOMMouseScroll', preventDefault, false);
      window.onmousewheel = document.onmousewheel = null;
      window.onwheel = null;
      window.ontouchmove = null;
      document.onkeydown = null;
    }
  }

}


/* 2.5 SUBMIT button */
// function Submit() {
//   // this is what the system is targetting
//   // const submit = document.getElementsByClassName('d-captcha-submit');
//   // const d_c_submit = submit[0];
//   // const style = d_c_submit.style;

//   // d_c_submit.disabled = true;

//   style.cursor = 'default';


//   return {
//     enable: function () {
//       d_c_submit.disabled = false;
//       style.cursor = 'pointer';
//       style.opacity = '1';
//       style.filter = 'alpha(opacity=1)'
//     }
//   }
// }



/*---------- SET UP ----------*/

const ANCHOR = new Anchor();
const UI = new UIObject();
const SCROLL = new Scroll();
// const SUBMIT = new Submit();



// start playing game with the circles.
function game(elements) {

  /* sorted copy of the circles */
  const sortedModel = makeSortedModel(elements);

  elements.forEach(function (element) {
    element.circle.onclick = function (event) {
      // value of the current circle
      const value = parseInt(this.getAttribute('value'));
      const baseNumber = sortedModel[0];




      if (value === baseNumber) {
        sortedModel.shift();
        element.rightPlay();
        element.stop();
        element.showValue();

        if (sortedModel.length === 0) {
          UI.fadeContainer();
          UI.successPOPUp();

          setTimeout(function () {
            // SUBMIT.enable();
            UI.close();
            SCROLL.enable();
            ANCHOR.checked();
          }, 1500);

        }

      } else {
        elements.forEach(function (element) {
          element.stop();
          element.showValue();
          element.disable();
        });


        element.wrongPlay();

        setTimeout(function () {
          UI.fadeContainer();
          UI.failPOPUp();

          setTimeout(function () {
            UI.failPOPUp();
            UI.fadeContainer();
            reStart();
          }, 2000) // restart
        }, 200);


      }
    }
  });
}


/* set up the game */
function buildGame() {

  // container for the circles(playground).
  const container = UI.container();

  /* clear container before start */
  UI.clearContainer();

  /* create the circles */
  const allCirlces = createCircles(Circle);
  const circles = shuffle(allCirlces, 4);


  /* start the game */
  function startGame() {


    /* deploy circles to the container. */
    append(container, circles);


    setTimeout(function () {

      circles.forEach(function (itme) {
        itme.hideValue();
      });

      /* ready the circles to be playd with */
      circles.forEach(function (itme) {
        itme.move();
      });

      setTimeout(function () {
        game(circles);

      }, 300);

    }, 2000);
  }

  // show the timer, then start game.
  UI.ready(startGame)

}


/* restart the game with wrong play or restart button.*/
function reStart() {
  // container for the circles(playground).
  const container = UI.container();

  /* clear container before start */
  UI.clearContainer();

  /* create the circles */
  const allCirlces = createCircles(Circle);
  const circles = shuffle(allCirlces, 4);


  /* start the game */

  /* deploy circles to the container. */
  append(container, circles);

  /* remove pop up */
  //  UI.failPOPUp();
  setTimeout(function () {

    circles.forEach(function (itme) {
      itme.hideValue();
    });

    setTimeout(function () {

      /* ready the circles to be playd with */
      circles.forEach(function (itme) {
        itme.move();
      });

      game(circles);

    }, 200);
  }, 2000);
}


/*---------- END ----------*/
